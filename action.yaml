name: "StartOS SDK"
description: "Provides start-sdk and start-cli"
runs:
  using: "composite"
  steps:
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Install dependencies
      run: |
        sudo rm /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update
        sudo apt-get install -y git build-essential openssl libssl-dev libc6-dev clang libclang-dev ca-certificates curl squashfs-tools-ng
        sudo snap install yq deno
        cargo install --force toml-cli web-static-pack-packer
        cargo install --git=https://github.com/Start9Labs/md-packer.git --branch=main
      shell: bash

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Checkout start-os
      uses: actions/checkout@v4
      with:
        repository: aldum/start-os
        ref: next/minor
        submodules: recursive

    - name: Cache start-sdk
      uses: actions/cache@v4
      id: cache
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-start-sdk-${{ hashFiles('**/install-cli.sh') }}

    - name: Install start-cli
      run: |
        if [ -z "$(command -v start-cli)" ]; then
          export RUSTFLAGS=""
          export OS_ARCH=$(uname -m)
          cargo update -p time --manifest-path=core/Cargo.toml
          make cli
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        fi
      shell: bash
